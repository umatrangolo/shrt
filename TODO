# TODO

v REST routes:
1. API for adding a shortened URL:
   > PUT /shrts
   > body: { url: [url to shrt], keyword: [unique keyword], description: [what it is], tags: [...] }
   < 201 OK { .. shrt .. }
   < 403 KO { url: [url to shrt] } // keyword/url already present

2. API to get a shortened URL:
   > GET /shrts/<token>
   < 301 to [original url]
   < 404 // if no url for given token

3. API for deleting a shrt url
   > DELETE /shrts/<token>
   < 200 OK
   < 404 // if no url for given token

4. API for listing all the shrt urls
   > GET /shrts
   < 200 OK
   < body: { ... all urls json encoded ...}

v Store Shrts in H2
v Count each time a token/url is used
v On sending URL wout the schema assume that it is 'http://'
v Support for tags (then used for Search)
v Does not save the description!
- Use H2 internal search engine to index shrts
- AngularJS based UI
- Better analytics
- Performance ??
